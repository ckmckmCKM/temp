syntax = "proto3";
package rbwar;

// 客户端到服务器发送消息的类型
enum ReceiveMessageType {
    StartID = 0;
    BetID = 1; // 下注信息
	SitDown = 2;//用户坐下消息
	GetTrend = 3;//获取走势图
	GetUserListInfo = 4; //获取玩家列表
	StandUp = 5;	//用户站立
	tempCard = 6;	//测试的牌
}

// 服务器发送给客户端的消息类型
enum SendToClientMessageType {
    RestartID = 0;
    BetRet = 1; // 下注消息
    BetFailID = 2; // 下注失败
    BetSuccessMessageID = 3; // 下注成功的消息id
    SceneID = 4; // 场景ID
	Status = 6;		//状态消息
	Settle = 7;		//结算消息
	SitDownFail = 8; //坐下失败
	BetInfo = 9;		//下注信息消息
	TrendInfo = 10;	//服务器发送走势图
	UserListInfo = 11;//玩家列表
	SceneSettleInfo = 12;//场景上的玩家结算信息
	ExitRet = 13;//退出结果，在用户失败时发送
	KickOutUser = 14;//踢出玩家发送原因
	RoomRolesInfo = 15;	//房间规则信息
	RoomSenceInfo = 16;	//场次场景信息
	UserComeBack = 17;	//用户回来的结算消息
}

//游戏阶段
enum GameStatus{
	StartStatus = 0;
	StartMovie = 1;//开始动画
	BetStatus = 2; //下注阶段
	EndBetMovie = 3; //结束下注动画
	SettleStatus = 4; //结算阶段
}

//牌的类型
enum CardsType{
	Normal = 0;
	DanZhang = 1; //单张
	DuiZi = 2;//对子
	ShunZi = 3;//顺子
	JinHua = 4;//金花
	ShunJin = 5;//顺金
	BaoZi = 6;//豹子
}

message StatusMessage{
	int32 Status = 1;		//状态
	int32 StatusTime = 2;	//状态的持续时间
}

// 押注失败发送的消息
message BetFailMessage {
    string FailMessage = 1;
}

// 押注成功时发送的消息
message BetSuccessMessage {
    int32 SeatId = 1;//座位号，场景中的座位号
	int32 BetIndex = 2;//下注的下标
	int32 BetType = 3;//红黑幸运一击
	int64 UserID=4;//用户ID
}

// 服务器收到的押注信息
message Bet {
    int32 BetType = 1;//红黑幸运一击
	int32 BetIndex = 2;//下注的下标
}

//游戏中几个玩家的数据
message SeatUser {
    string Nick = 1; // 用户昵称
    string Head = 2; // 头像
    int64 Score = 3; // 分数
    bool IsBigWinner = 4; // 是否是大富翁
    bool IsMaster = 5; // 是否是神算子
	int32 SeatId=6;//在场景中的座位id
	int64 UserID = 7;//用户ID
}

// 发送场景数据
message SceneMessage{
	repeated SeatUser UserData = 1;
}

message UserSitDown{
	int32 ChairNo = 1;//座位号
}

message UserSitDownFail{
	string FailReaSon = 1;//坐下失败
}

message Red{
    bytes Card = 1;
}

message Black{
    bytes Card = 1;
}

//结算消息
message SettleMsg{
	bytes RedPoker = 1;
    bytes BlackPoker = 2;
	int32 Win = 3; // 1表示红胜利，2表示黑方胜利
	int32 WinCardType = 4; //赢的牌的类型
	int64 UserWinRed = 5;	//玩家自己赢的金币,红，不包括幸运一击
	int32 LoseCardType = 6;//输的一方的牌类型
	int64 LuckWin = 7; //幸运一击赢钱
	int64 UserScore = 8; //用户当前的分数
	int64 UserWinBlack = 9;//黑赢钱
	bool IsLuck = 10;//0不是幸运一击，1表示是幸运一击
	int64 Red = 11;//红色区域的钱
	int64 Black = 12;//红色区域的钱
	int64 Luck = 13;//红色区域的钱
	int64 UserBetRed = 14;//用户自己下注
	int64 UserBetBlack = 15;
	int64 UserBetLuck = 16;
	int64 UserBetTotal = 17;//玩家总下注
	int64 UserTotalWin = 18;//用户总赢钱
}

message SceneBetInfo{
	int64 Red = 1;//红色区域的钱
	int64 Black = 2;//红色区域的钱
	int64 Luck = 3;//红色区域的钱
	int64 UserBetRed = 4;//用户自己下注
	int64 UserBetBlack = 5;
	int64 UserBetLuck = 6;
	int64 UserBetTotal = 7;//玩家总下注
	int32 MasterBetType = 8;//神算子下注的区域，0红，1，黑，2幸运,-1时表示无下注
}

message Trend{
	repeated int32 Win = 1;//1表示红胜利，2表示黑方胜利
	repeated int32 WinCardType = 2;//赢的牌的类型
}

message UserInfo{
	string NikeName = 1;//昵称
	int64 UserGlod = 2;//玩家金币
	int64 BetGold = 3;//下注金币
	int32 WinCount =  4;//赢的次数
    string Head = 5; // 头像
}

//用户列表
message UserList{
	repeated UserInfo UserList = 1;
}

message SceneUserInfo{
	int64 UserID = 1;
	int32 SceneSeatID = 2;
	int64 RedWin = 3;
	int64 BlackWin = 4;
	int64 LuckWin = 5;
	int64 UserScore = 6;
	int64 UserTotalWin = 7;
	int64 BetRed = 8;
	int64 BetBlack = 9;
	int64 BetLuck = 10;
}

//场景上的玩家结算信息
message SceneUserSettle{
	repeated SceneUserInfo UserList = 1;
}

message ExitFail{
	string FailReason = 1;//失败的原因
}

message KickOutUserMsg{
	string KickOutReason = 1;//踢出玩家发送原因
}

message RoomRolesInfoMsg{
	repeated int32 BetArr = 1; //下注数组
	int64 UserBetLimit= 2;		//个人下注限制
}

//次消息一秒一次
message RoomSenceInfoMsg{
	int64 RoomID = 1;
	Trend TrendList = 2;
	StatusMessage GameStatus = 3;
	int64 BaseBet = 4;
	int64 UserLimit = 5;
}

//测试
message tempCardMsg{
	bytes RedPoker = 1;
    bytes BlackPoker = 2;
}
