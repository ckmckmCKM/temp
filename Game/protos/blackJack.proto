syntax = "proto3";

// 客户端到服务器发送消息的类型
enum ReceiveMessageType {
    StartID = 0;
	SitDown = 1;//用户坐下消息
    Bet = 2; // 下注信息
	AskDo = 3;//询问操作
	BuyInsure = 4;//购买保险
	BetOver = 5;//下注完毕
}

// 服务器发送给客户端的消息类型
enum SendToClientMessageType {
    RestartID = 0;
    BetRet = 1; // 下注消息
    BetFail = 2; // 下注失败
    BetSuccessMessageID = 3; // 下注成功的消息id
    SceneMessage = 4; // 场景信息
	AskDo = 5;//询问操作
	Status = 6;		//状态消息
	Settle = 7;		//结算消息
	SitDownFail = 8; //坐下失败
	BuyInsure = 9;//购买保险
	FaPai = 10;//发牌
	ZhuangJiaAnPai = 11;//庄家暗牌信息
	CurrentSeat = 12;//当前操作的玩家
}

//游戏阶段
enum GameStatus{
	StartStatus = 0;
	BetStatus = 1; //下注阶段
	FirstRoundFaPai = 2;//第一轮发牌
	SecondRoundFaPai = 3;//第二轮发牌
	Result = 4;//结算阶段
}

//牌的类型
enum CardsType{
	Normal = 0;
	BlackJack = 1; //黑杰克
	FiveDragon = 2;//五小龙
	Point21 = 3;//21点
	Other = 4;//普通牌
	Bust = 5;//爆牌
}

message StatusMessage{
	int32 Status = 1;		//等待游戏开始状态
	int32 StatusTime = 2;	//状态的持续时间
}

//当前操作的玩家座位
message CurrentSeat{
	int32 Seat = 1;	
	int32 StatusTime = 2;	//状态的持续时间
}

// 押注失败发送的消息
message BetFailMessage {
    string FailMessage = 1;
}

// 押注成功时发送的消息
message BetSuccessMessage {
    int32 SeatId = 1;//座位号，场景中的座位号
	int32 BetIndex = 2;//下注的下标
	int32 BetCardsIndex = 3;//分牌标识(手牌0或1)
	int64 UserID = 4;//用户ID
	int64 BetNum = 5;//下注数量
}

//发牌
message FaPai{
	repeated UserPaiInfo UserPaiInfoArr = 1;//闲家手牌
	bytes Cards = 2;//庄家发的明牌
}

//发一张牌
message FaPaiOne{
	int32 SeatId = 1;//座位号，场景中的座位号
	bytes Cards = 2;
}

//玩家牌信息
message UserPaiInfo{
	int32 SeatId = 1;//座位号，场景中的座位号
	bytes CardArr = 2;//手牌(如果为空表示显示牌背)
}

//庄家暗牌信息
message ZhuangJiaAnPai{
	bytes Cards = 1;
}

//手牌
message HandCards{
	bytes Cards = 1;
}

//游戏中几个玩家的数据
message SeatUser {
    string Nick = 1; // 用户昵称
    int32 Head = 2; // 头像
    int64 Score = 3; // 分数
    bool IsBigWinner = 4; // 是否是大富翁
    bool IsMaster = 5; // 是否是神算子
	int32 SeatId=6;//在场景中的座位id
	bytes Cards0 = 7;//手牌0
	bytes Cards1 = 8;//手牌1(若未分牌，则此项为空)
	int64 CardsBet0 = 9;//手牌0的下注
	int64 CardsBet1 = 10;//手牌1的下注
	bool IsBuyInsure = 11;//是否购买了保险
}


// 当前桌面信息(用于断线重连)
message SceneMessage{
	repeated SeatUser UserData = 1;
	int32 GameStatus = 2;//游戏阶段
	int32 CurrentAskSeat = 3;//当前询问的玩家座位
}

message UserSitDown{
	int32 ChairNo = 1;//座位号
}

message UserSitDownFail{
	int32 FailNo = 1;//坐下失败，1表示座位上已经有人了
}

//结算消息
message SettleMsg{
	int32 UserId = 1;//用户ID
	int64 UserWinLoss = 2;//闲家输赢
	int64 ZhuangWinLoss = 3;//庄家输赢
}

//----------------------------------------

// 服务器收到的押注信息
message Bet {
    int32 BetCardsIndex = 1;//分牌标识(手牌0或1)
	int32 BetIndex = 2;//下注的下标
}

// 服务器收到的询问操作
message AskDo {
	int32 GetPoker = 1;//要牌
    int32 DepartPoker = 2;//分牌
	int32 DoubleBet = 3;//双倍
	int32 Stop = 4;//停牌
	int32 GiveUp = 5;//认输
}

// 服务器收到的购买保险
message BuyInsure {
    int32 Buy = 1;//购买保险
	int32 NotBuy = 2;//不购买
}

// 双倍押注数据结构
message DoubleBet {
    int32 BetCardsIndex = 1;//分牌标识(手牌0或1)
	int64 CurrentBet = 2;//当前下注
}